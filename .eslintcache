[{"E:\\Project\\networksecurity\\cypherit\\src\\index.js":"1","E:\\Project\\networksecurity\\cypherit\\src\\reportWebVitals.js":"2","E:\\Project\\networksecurity\\cypherit\\src\\components\\Graph.js":"3","E:\\Project\\networksecurity\\cypherit\\src\\components\\PA0.js":"4","E:\\Project\\networksecurity\\cypherit\\src\\components\\Pa0.js":"5","E:\\Project\\networksecurity\\cypherit\\src\\components\\Navbar.js":"6","E:\\Project\\networksecurity\\cypherit\\src\\components\\Graphapp.js":"7","E:\\Project\\networksecurity\\cypherit\\src\\components\\KeyGenerator.js":"8","E:\\Project\\networksecurity\\cypherit\\src\\components\\ImageEncrypt.js":"9","E:\\Project\\networksecurity\\cypherit\\src\\components\\ImageOp.js":"10"},{"size":903,"mtime":1617654745909,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":1473,"mtime":1615910068542,"results":"14","hashOfConfig":"12"},{"size":2706,"mtime":1615904157776,"results":"15","hashOfConfig":"12"},{"size":2852,"mtime":1617456975543,"results":"16","hashOfConfig":"12"},{"size":4402,"mtime":1617654605232,"results":"17","hashOfConfig":"12"},{"size":913,"mtime":1615910103540,"results":"18","hashOfConfig":"12"},{"size":2804,"mtime":1617809008378,"results":"19","hashOfConfig":"12"},{"size":3667,"mtime":1617656058475,"results":"20","hashOfConfig":"12"},{"size":8294,"mtime":1617774191749,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"eutxkm",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"25"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"25"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"25"},"E:\\Project\\networksecurity\\cypherit\\src\\index.js",["51","52"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Pa0 from './components/Pa0.js';\nimport Navbar from './components/Navbar.js';\nimport KeyGenerator from './components/KeyGenerator.js';\nimport ImageEncrypt from './components/ImageEncrypt.js';\nimport ImageOp from './components/ImageOp.js';\nimport { BrowserRouter as Router,Switch,Route } from 'react-router-dom';\n\nconst data = [\n  {\n    name: 'A', freq: 2400,fre2 :2222\n  },\n  {\n    name: 'B', freq: 5000,fre2 : 2300\n  }\n];\nReactDOM.render(\n  <Router>\n      <div>\n        <Navbar/>\n          <Switch>\n\n            <Route path=\"/encrypt-image\" exact component={ImageEncrypt}/>\n            <Route path=\"/encrypt-image-operation\" exact component={ImageOp}/>\n            <Route path=\"/key-generator\" exact component={KeyGenerator}/>\n\n          </Switch>\n      </div>\n    </Router>\n  ,document.getElementById('root')\n);\n",["53","54"],"E:\\Project\\networksecurity\\cypherit\\src\\reportWebVitals.js",[],"E:\\Project\\networksecurity\\cypherit\\src\\components\\Graph.js",[],["55","56"],"E:\\Project\\networksecurity\\cypherit\\src\\components\\PA0.js",["57","58","59"],"import React from 'react'\r\nimport App from './App.js'\r\nimport Graph from './Graph.js'\r\n\r\n\r\n// var shift = 25\r\nclass PA0 extends React.Component {\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n      cipher: \"\",\r\n      graphdata : \"\",\r\n      alpha : \"\",\r\n      plainText : \"\",\r\n      shift : 0,\r\n      lastwritten : 0\r\n    }\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleChangedCipher = this.handleChangedCipher.bind(this)\r\n    this.handleShift = this.handleShift.bind(this);\r\n    this.getPlainText = this.getPlainText.bind(this);\r\n    this.getCipherText = this.getCipherText.bind(this);\r\n  }\r\n\r\n  handleChange(event){\r\n    this.setState({\r\n      plainText : event.target.value,\r\n      lastwritten : 0\r\n    },()=>{this.getCipherText()})\r\n  }\r\n\r\n  handleShift(event)\r\n  {\r\n    this.setState({\r\n      shift : event.target.value\r\n    },()=>{\r\n      if(!this.state.lastwritten)\r\n        this.getCipherText();\r\n      else\r\n        this.getPlainText();\r\n    })\r\n\r\n  }\r\n\r\n  handleChangedCipher(event){\r\n    this.setState({\r\n      cipher : event.target.value,\r\n      lastwritten : 1\r\n    },()=>{this.getPlainText()})\r\n\r\n\r\n  }\r\n\r\n  getCipherText(){\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n            plainText:this.state.plainText,\r\n            'shift':this.state.shift\r\n        })\r\n    };\r\n    fetch(\"http://127.0.0.1:8000/pa0\",requestOptions).then(response=>response.json()).then(data =>{\r\n      this.setState({\r\n        cipher : data.cipher,\r\n        graphdata : data.graphdata,\r\n      })\r\n    })\r\n  }\r\n\r\n  getPlainText()\r\n  {\r\n      const requestOptions = {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n              plainText:this.state.cipher,\r\n              'shift':24 - this.state.shift\r\n          })\r\n      };\r\n      fetch(\"http://127.0.0.1:8000/pa0\",requestOptions).then(response=>response.json()).then(data =>{\r\n        this.setState({\r\n          plainText : data.cipher\r\n        })\r\n      })\r\n  }\r\n\r\n  componentDidMount(){\r\n  }\r\n  render () {\r\n    return (\r\n      <div>\r\n        <form>\r\n        <input value = {this.state.plainText} type = \"text\" placeholder = \"Plain Text\" onChange={this.handleChange}/>\r\n        <input value = {this.state.shift} type = \"text\" placeholder = \"Shift\" onChange={this.handleShift}/>\r\n        <input value = {this.state.cipher} type = \"text\" placeholder = \"Cipher Text\" onChange={this.handleChangedCipher}/>\r\n        <h1>{this.state.cipher}</h1>\r\n        </form>\r\n        <App data = {this.state.graphdata}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CaesarCypher\r\n",["60","61"],"E:\\Project\\networksecurity\\cypherit\\src\\components\\Pa0.js",[],"E:\\Project\\networksecurity\\cypherit\\src\\components\\Navbar.js",["62","63","64"],"import react from 'react';\r\nimport {Link} from 'react-router-dom'\r\nfunction Navbar()\r\n{\r\n  return (\r\n    <nav className = \"navbar\">\r\n      <ul className = \"navbar-nav\">\r\n        <Link to='/key-generator'>\r\n          <li className=\"nav-link\">\r\n            <svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n             viewBox=\"0 0 469.333 469.333\"  xml=\"preserve\">\r\n            <g>\r\n            <g>\r\n              <path d=\"M248.533,192c-17.6-49.707-64.853-85.333-120.533-85.333c-70.72,0-128,57.28-128,128s57.28,128,128,128\r\n                c55.68,0,102.933-35.627,120.533-85.333h92.8v85.333h85.333v-85.333h42.667V192H248.533z M128,277.333\r\n                c-23.573,0-42.667-19.093-42.667-42.667S104.427,192,128,192c23.573,0,42.667,19.093,42.667,42.667S151.573,277.333,128,277.333z\"\r\n                />\r\n            </g>\r\n            </g>\r\n            </svg>\r\n          </li>\r\n        </Link>\r\n\r\n        <Link to=\"/encrypt-image\">\r\n          <li className=\"nav-link\">\r\n              <svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n          \t width=\"535.5px\" height=\"535.5px\" viewBox=\"0 0 535.5 535.5\" xml=\"preserve\"\r\n          \t>\r\n          <g>\r\n          \t<g id=\"lock\">\r\n          \t\t<path d=\"M420.75,178.5h-25.5v-51c0-71.4-56.1-127.5-127.5-127.5c-71.4,0-127.5,56.1-127.5,127.5v51h-25.5c-28.05,0-51,22.95-51,51\r\n          \t\t\tv255c0,28.05,22.95,51,51,51h306c28.05,0,51-22.95,51-51v-255C471.75,201.45,448.8,178.5,420.75,178.5z M267.75,408\r\n          \t\t\tc-28.05,0-51-22.95-51-51s22.95-51,51-51s51,22.95,51,51S295.8,408,267.75,408z M346.8,178.5H188.7v-51\r\n          \t\t\tc0-43.35,35.7-79.05,79.05-79.05c43.35,0,79.05,35.7,79.05,79.05V178.5z\"/>\r\n          \t</g>\r\n          </g>\r\n\r\n          </svg>\r\n          </li>\r\n        </Link>\r\n        <Link to=\"/encrypt-image-operation\">\r\n          <li className=\"nav-link\">\r\n            <svg id=\"Layer_1\" enable-background=\"new 0 0 512.001 512.001\" viewBox=\"0 0 512.001 512.001\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m437.334 0h-234.666s0 0-2.133 0c0 0 0 0-2.133 0s-4.267 2.133-4.267 2.133l-128 128c-2.135 2.134-2.135 2.134-2.135 4.267v2.133 2.133 362.667c0 6.4 4.267 10.667 10.667 10.667h362.667c6.4 0 10.667-4.267 10.667-10.667v-490.666c0-6.4-4.267-10.667-10.667-10.667zm-245.333 36.267v91.733h-91.733zm-32 390.4c-6.4 0-10.667-4.267-10.667-10.667v-38.4l-2.133 2.133c-4.267 4.267-10.667 4.267-14.934 0s-4.267-10.667 0-14.934l21.333-21.333c2.133-2.133 8.533-4.267 10.667-2.133 4.267 2.133 6.4 6.4 6.4 10.667v64h.001c0 6.4-4.267 10.667-10.667 10.667zm21.333-128h-42.667c-6.4 0-10.667-4.267-10.667-10.667v-64c0-6.4 4.267-10.667 10.667-10.667h42.667c6.4 0 10.667 4.267 10.667 10.667v64c0 6.4-4.267 10.667-10.667 10.667zm74.667 117.333c0 6.4-4.267 10.667-10.667 10.667h-42.667c-6.4 0-10.667-4.267-10.667-10.667v-64c0-6.4 4.267-10.667 10.667-10.667h42.667c6.4 0 10.667 4.267 10.667 10.667zm-10.667-117.333c-6.4 0-10.667-4.267-10.667-10.667v-38.4l-2.133 2.133c-4.267 4.267-10.667 4.267-14.934 0s-4.267-10.667 0-14.934l21.333-21.333c2.133-2.133 8.533-4.267 10.667-2.133 4.267 2.133 6.4 6.4 6.4 10.667v64h.001c0 6.4-4.267 10.667-10.667 10.667zm64 128c-6.4 0-10.667-4.267-10.667-10.667v-38.4l-2.133 2.133c-4.267 4.267-10.667 4.267-14.934 0s-4.267-10.667 0-14.934l21.333-21.333c2.133-2.133 8.533-4.267 10.667-2.133 4.267 2.133 6.4 6.4 6.4 10.667v64h.001c0 6.4-4.267 10.667-10.667 10.667zm0-128c-6.4 0-10.667-4.267-10.667-10.667v-38.4l-2.133 2.133c-4.267 4.267-10.667 4.267-14.934 0s-4.267-10.667 0-14.934l21.333-21.333c2.133-2.133 8.533-4.267 10.667-2.133 4.267 2.133 6.4 6.4 6.4 10.667v64h.001c0 6.4-4.267 10.667-10.667 10.667zm64 128c-6.4 0-10.667-4.267-10.667-10.667v-38.4l-2.133 2.133c-4.267 4.267-10.667 4.267-14.934 0s-4.267-10.667 0-14.934l21.333-21.333c2.133-2.133 8.533-4.267 10.667-2.133 4.267 2.133 6.4 6.4 6.4 10.667v64h.001c0 6.4-4.267 10.667-10.667 10.667zm0-128c-6.4 0-10.667-4.267-10.667-10.667v-38.4l-2.133 2.133c-4.267 4.267-10.667 4.267-14.934 0s-4.267-10.667 0-14.934l21.333-21.333c2.133-2.133 8.533-4.267 10.667-2.133 4.267 2.133 6.4 6.4 6.4 10.667v64h.001c0 6.4-4.267 10.667-10.667 10.667z\"/><path d=\"m213.334 362.667h21.333v42.667h-21.333z\"/><path d=\"m149.334 234.667h21.333v42.667h-21.333z\"/>\r\n            </svg>\r\n          </li>\r\n        </Link>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","E:\\Project\\networksecurity\\cypherit\\src\\components\\Graphapp.js",["65"],"import React, { PureComponent } from 'react';\r\nimport {\r\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\n\r\n// export default class App extends PureComponent {\r\n//   constructor(props){\r\n//     super()\r\n//     console.log(props)\r\n//     this.state = {\r\n//       data : props.data\r\n//     }\r\n//   }\r\n\r\nfunction Graphapp(props){\r\n    return (\r\n      <LineChart\r\n        width={500}\r\n        height={300}\r\n        data={props.data}\r\n        margin={{\r\n          top: 5, right: 30, left: 20, bottom: 5,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line type=\"monotone\" dataKey=\"pFreq\" stroke=\"#99d98c\" activeDot={{ r: 8 }} />\r\n        <Line type=\"monotone\" dataKey=\"cFreq\" stroke=\"#168aad\" />\r\n      </LineChart>\r\n    );\r\n}\r\nexport default Graphapp;\r\n","E:\\Project\\networksecurity\\cypherit\\src\\components\\KeyGenerator.js",[],"E:\\Project\\networksecurity\\cypherit\\src\\components\\ImageEncrypt.js",["66"],"import React from 'react'\r\nimport axios from 'axios';\r\nclass ImageEncrypt extends React.Component{\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n      furl : null,\r\n      file : null,\r\n      pbn : null,\r\n      pbg : null,\r\n      enc_img : null,\r\n      fileDownloadUrl : \"\",\r\n      keyfile : \"\",\r\n    }\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleEncrypt = this.handleEncrypt.bind(this)\r\n    this.changeN = this.changeN.bind(this)\r\n    this.changeG = this.changeG.bind(this)\r\n    this.downloadFile = this.downloadFile.bind(this)\r\n    this.handleKeys = this.handleKeys.bind(this)\r\n  }\r\n  handleChange(event){\r\n    this.setState({\r\n      furl : window.URL.createObjectURL(event.target.files[0]),\r\n      file : event.target.files[0]\r\n    })\r\n  }\r\n  handleKeys(event){\r\n    this.setState({\r\n      keyfile : event.target.files[0]\r\n    },() =>{\r\n      const reader = new FileReader()\r\n        reader.onload = async (e) => {\r\n          const text = (e.target.result)\r\n          var res = JSON.parse(text)\r\n          this.setState({\r\n            pbn : res.pbn,\r\n            pbg : res.pbg\r\n          })\r\n      };\r\n      reader.readAsText(event.target.files[0])\r\n\r\n    })\r\n  }\r\n  handleEncrypt(event){\r\n\r\n    const formData = new FormData();\r\n      formData.append(\r\n        \"myFile\",\r\n        this.state.file,\r\n        this.state.file.name\r\n      );\r\n      formData.append(\"pbn\",this.state.pbn);\r\n      formData.append(\"pbg\",this.state.pbg);\r\n\r\n      axios.post(\"http://127.0.0.1:8000/encrypt-image\", formData, { // receive two parameter endpoint url ,form data\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          enc_img : response.data\r\n        },()=>{\r\n          this.downloadFile()\r\n        })\r\n      })\r\n  }\r\n  downloadFile(){\r\n    const blob = new Blob([JSON.stringify(this.state.enc_img)]);\r\n    // console.log(JSON.parse(JSON.stringify(this.state.enc_img)));\r\n    const fileDownloadUrl = URL.createObjectURL(blob);\r\n    this.setState ({fileDownloadUrl: fileDownloadUrl},\r\n      () => {\r\n        this.dofileDownload.click();\r\n        URL.revokeObjectURL(fileDownloadUrl);\r\n        this.setState({fileDownloadUrl: \"\"})\r\n    })\r\n  }\r\n  changeN(event){\r\n    this.setState({\r\n      pbn : event.target.value\r\n    })\r\n  }\r\n  changeG(event){\r\n    this.setState({\r\n      pbg : event.target.value\r\n    })\r\n  }\r\n  changeBits(event){\r\n      this.setState({\r\n        bits : event.target.value\r\n      })\r\n\r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"right-view\">\r\n        <div className=\"heading-bar\">\r\n          <p className=\"page-heading\">Encrpyt Image</p>\r\n        </div>\r\n        <label for=\"files\" class=\"example_b\">Select Image</label>\r\n        <input id=\"files\" className=\"hide-button\" type=\"file\" onChange={this.handleChange}/>\r\n        <label for=\"files2\" class=\"example_b\">Upload Keys</label>\r\n        <input id=\"files2\" className=\"hide-button\" type=\"file\" onChange={this.handleKeys}/>\r\n        <img src={this.state.furl}/>\r\n        <input className=\"input-box\" value = {this.state.pbn} type = \"number\" placeholder = \"Public Key N\" onChange={this.changeN}/>\r\n        <input className=\"input-box slight-left\" value = {this.state.pbg} type = \"number\" placeholder = \"Public Key G\" onChange={this.changeG}/>\r\n        <br/>\r\n        <br/>\r\n        <input className=\"input-button example_b\" id=\"clickMe\" type=\"button\" value=\"Encrypt Image\" onClick={this.handleEncrypt} />\r\n        <a style={{display: \"none\"}}\r\n         download={\"temp\"}\r\n         href={this.state.fileDownloadUrl}\r\n         ref={e=>this.dofileDownload = e}\r\n         >download it</a>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ImageEncrypt\r\n","E:\\Project\\networksecurity\\cypherit\\src\\components\\ImageOp.js",["67","68"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport Base64 from 'js-base64'\r\nclass ImageOp extends React.Component{\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n      furl : null,\r\n      file : null,\r\n      pbn : 666492155141,\r\n      pbg : 666492155142,\r\n      prl : 33324524400,\r\n      prmu : 322764006131,\r\n      data : null,\r\n      fileDownloadUrl : \"\",\r\n      brightness : 0,\r\n      neg : 1,\r\n      blur : 0,\r\n    }\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.changeN = this.changeN.bind(this)\r\n    this.changeG = this.changeG.bind(this)\r\n    this.changeL = this.changeL.bind(this)\r\n    this.changeM = this.changeM.bind(this)\r\n    this.handleDecrypt = this.handleDecrypt.bind(this)\r\n    this.handleBrightness = this.handleBrightness.bind(this)\r\n    this.handleNegation = this.handleNegation.bind(this)\r\n    this.handleBlur = this.handleBlur.bind(this)\r\n    this.handleEdge = this.handleEdge.bind(this)\r\n    this.handleKeys = this.handleKeys.bind(this)\r\n\r\n  }\r\n  handleKeys(event){\r\n    this.setState({\r\n      keyfile : event.target.files[0]\r\n    },() =>{\r\n      const reader = new FileReader()\r\n        reader.onload = async (e) => {\r\n          const text = (e.target.result)\r\n          var res = JSON.parse(text)\r\n          this.setState({\r\n            pbn : res.pbn,\r\n            pbg : res.pbg,\r\n            prl : res.prl,\r\n            prmu : res.prmu\r\n          })\r\n      };\r\n      reader.readAsText(event.target.files[0])\r\n\r\n    })\r\n  }\r\n  handleChange(event){\r\n    this.setState({\r\n      file : event.target.files[0]\r\n    },() =>{\r\n      const reader = new FileReader()\r\n        reader.onload = async (e) => {\r\n          const text = (e.target.result)\r\n          // console.log(text)\r\n          this.setState({\r\n            data : text\r\n          })\r\n      };\r\n      reader.readAsText(event.target.files[0])\r\n\r\n    })\r\n\r\n  }\r\n  changeN(event){\r\n    this.setState({\r\n      pbn : event.target.value\r\n    })\r\n  }\r\n  changeG(event){\r\n    this.setState({\r\n      pbg : event.target.value\r\n    })\r\n  }\r\n  changeL(event){\r\n    this.setState({\r\n      prl : event.target.value\r\n    })\r\n  }\r\n  changeM(event){\r\n    this.setState({\r\n      prmu : event.target.value\r\n    })\r\n  }\r\n\r\n  handleBrightness(event){\r\n    const formData = new FormData();\r\n    formData.append(\"data\",JSON.stringify(JSON.parse(this.state.data)));\r\n    formData.append(\"pbn\",this.state.pbn);\r\n    formData.append(\"pbg\",this.state.pbg);\r\n    formData.append(\"prl\",this.state.prl);\r\n    formData.append(\"prmu\",this.state.prmu);\r\n    this.setState({\r\n      brightness : event.target.value\r\n    })\r\n    formData.append(\"brightness\",this.state.brightness)\r\n    this.setState({\r\n      brightness : event.target.value\r\n    })\r\n    axios.post(\"http://127.0.0.1:8000/inc-brightness\", formData, { // receive two parameter endpoint url ,form data\r\n    })\r\n    .then((response) => {\r\n      var s = `data:image/gif;base64,${response.data.b64}`\r\n      this.setState({\r\n        furl : s\r\n      })\r\n      console.log(  s )\r\n    })\r\n  }\r\n\r\n  handleNegation(){\r\n    const formData = new FormData();\r\n    formData.append(\"data\",JSON.stringify(JSON.parse(this.state.data)));\r\n    formData.append(\"pbn\",this.state.pbn);\r\n    formData.append(\"pbg\",this.state.pbg);\r\n    formData.append(\"prl\",this.state.prl);\r\n    formData.append(\"prmu\",this.state.prmu);\r\n    formData.append(\"negation\",this.state.neg);\r\n    this.setState({\r\n      neg : (this.state.neg+1)%2\r\n    })\r\n    axios.post(\"http://127.0.0.1:8000/image-negation\", formData, { // receive two parameter endpoint url ,form data\r\n    })\r\n    .then((response) => {\r\n      var s = `data:image/gif;base64,${response.data.b64}`\r\n      this.setState({\r\n        furl : s\r\n      })\r\n      console.log(  s )\r\n    })\r\n  }\r\n\r\n  handleBlur(event){\r\n    const formData = new FormData();\r\n    formData.append(\"data\",JSON.stringify(JSON.parse(this.state.data)));\r\n    formData.append(\"pbn\",this.state.pbn);\r\n    formData.append(\"pbg\",this.state.pbg);\r\n    formData.append(\"prl\",this.state.prl);\r\n    formData.append(\"prmu\",this.state.prmu);\r\n    formData.append(\"blur\",event.target.value);\r\n    this.setState({\r\n      blur : event.target.value\r\n    })\r\n    axios.post(\"http://127.0.0.1:8000/image-blur\", formData, { // receive two parameter endpoint url ,form data\r\n    })\r\n    .then((response) => {\r\n      var s = `data:image/gif;base64,${response.data.b64}`\r\n      this.setState({\r\n        furl : s\r\n      })\r\n      console.log(  s )\r\n    })\r\n  }\r\n  handleEdge(event){\r\n    const formData = new FormData();\r\n    formData.append(\"data\",JSON.stringify(JSON.parse(this.state.data)));\r\n    formData.append(\"pbn\",this.state.pbn);\r\n    formData.append(\"pbg\",this.state.pbg);\r\n    formData.append(\"prl\",this.state.prl);\r\n    formData.append(\"prmu\",this.state.prmu);\r\n    this.setState({\r\n      blur : event.target.value\r\n    })\r\n    axios.post(\"http://127.0.0.1:8000/image-edge-detect\", formData, { // receive two parameter endpoint url ,form data\r\n    })\r\n    .then((response) => {\r\n      var s = `data:image/gif;base64,${response.data.b64}`\r\n      this.setState({\r\n        furl : s\r\n      })\r\n      console.log(  s )\r\n    })\r\n  }\r\n\r\n  handleDecrypt(){\r\n    const formData = new FormData();\r\n\r\n      formData.append(\"data\",JSON.stringify(JSON.parse(this.state.data)));\r\n      formData.append(\"pbn\",this.state.pbn);\r\n      formData.append(\"pbg\",this.state.pbg);\r\n      formData.append(\"prl\",this.state.prl);\r\n      formData.append(\"prmu\",this.state.prmu);\r\n      formData.append(\"brightness\",this.state.brightness)\r\n      axios.post(\"http://127.0.0.1:8000/decrypt-image\", formData, { // receive two parameter endpoint url ,form data\r\n      })\r\n      .then((response) => {\r\n        var s = `data:image/gif;base64,${response.data.b64}`\r\n        this.setState({\r\n          furl : s\r\n        })\r\n        console.log(  s )\r\n      })\r\n  }\r\n\r\n\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"right-view\">\r\n        <div className=\"heading-bar\">\r\n          <p className=\"page-heading\">Image Operations</p>\r\n        </div>\r\n        <label for=\"files\" class=\"example_b\">Select Encrpyted Image</label>\r\n        <input id=\"files\" className=\"hide-button\" type=\"file\" onChange={this.handleChange}/>\r\n\r\n        <label for=\"files2\" class=\"example_b\">Upload Keys</label>\r\n        <input id=\"files2\" className=\"hide-button\" type=\"file\" onChange={this.handleKeys}/>\r\n        <br/>\r\n        <br/>\r\n        <input className=\"input-box slight-left\" value = {this.state.pbn} type = \"number\" placeholder = \"Public Key N\" onChange={this.changeN}/>\r\n        <input className=\"input-box slight-left\" value = {this.state.pbg} type = \"number\" placeholder = \"Public Key G\" onChange={this.changeG}/>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        <input className=\"input-box slight-left\" value = {this.state.prl} type = \"number\" placeholder = \"Private Key Lambda\" onChange={this.changeL}/>\r\n        <input className=\"input-box slight-left\" value = {this.state.prmu} type = \"number\" placeholder = \"Private Key Mu\" onChange={this.changeM}/>\r\n        <br/>\r\n        <br/>\r\n        <input className=\"input-button example_b\" id=\"clickMe\" type=\"button\" value=\"Decrypt Image\" onClick={this.handleDecrypt} />\r\n        <div className=\"controls\">\r\n          <ul>\r\n            <li>\r\n            <input className=\"input-box slight-left\" value = {this.state.brightness} type = \"number\" placeholder = \"Brightness\" onChange={this.handleBrightness}/>\r\n            </li>\r\n            <li>\r\n              <input className=\"input-button example_b\" id=\"clickMe\" type=\"button\" value=\"Image Negation\" onClick={this.handleNegation} />\r\n            </li>\r\n            <li>\r\n            <input className=\"input-box slight-left\" value = {this.state.blur} type = \"number\" placeholder = \"Blur Radius\" onChange={this.handleBlur}/>\r\n            </li>\r\n            <li>\r\n              <input className=\"input-button example_b\" id=\"clickMe\" type=\"button\" value=\"Edge Detect\" onClick={this.handleEdge} />\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <a style={{display: \"none\"}}\r\n         download={\"img\"}\r\n         href={this.state.fileDownloadUrl}\r\n         ref={e=>this.dofileDownload = e}\r\n         >download it</a>\r\n         <img src={this.state.furl}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default ImageOp\r\n",{"ruleId":"69","severity":1,"message":"70","line":4,"column":8,"nodeType":"71","messageId":"72","endLine":4,"endColumn":11},{"ruleId":"69","severity":1,"message":"73","line":11,"column":7,"nodeType":"71","messageId":"72","endLine":11,"endColumn":11},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"74","replacedBy":"78"},{"ruleId":"76","replacedBy":"79"},{"ruleId":"69","severity":1,"message":"80","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":13},{"ruleId":"69","severity":1,"message":"81","line":7,"column":7,"nodeType":"71","messageId":"72","endLine":7,"endColumn":10},{"ruleId":"82","severity":2,"message":"83","line":105,"column":16,"nodeType":"71","messageId":"84","endLine":105,"endColumn":28},{"ruleId":"74","replacedBy":"85"},{"ruleId":"76","replacedBy":"86"},{"ruleId":"69","severity":1,"message":"87","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":13},{"ruleId":"88","severity":1,"message":"89","line":10,"column":79,"nodeType":"90","endLine":10,"endColumn":115},{"ruleId":"88","severity":1,"message":"89","line":26,"column":81,"nodeType":"90","endLine":26,"endColumn":117},{"ruleId":"69","severity":1,"message":"91","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":30},{"ruleId":"92","severity":1,"message":"93","line":103,"column":9,"nodeType":"94","endLine":103,"endColumn":37},{"ruleId":"69","severity":1,"message":"95","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":14},{"ruleId":"92","severity":1,"message":"93","line":245,"column":10,"nodeType":"94","endLine":245,"endColumn":38},"no-unused-vars","'Pa0' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","no-native-reassign",["96"],"no-negated-in-lhs",["97"],["96"],["97"],"'Graph' is defined but never used.","'PA0' is defined but never used.","no-undef","'CaesarCypher' is not defined.","undef",["96"],["97"],"'react' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'PureComponent' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Base64' is defined but never used.","no-global-assign","no-unsafe-negation"]